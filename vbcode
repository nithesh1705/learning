Imports System.Diagnostics
Imports System.Runtime.InteropServices
Imports System.Management

Try
    ' Get the current username
    Dim currentUser As String = Environment.UserName.ToLower()

    ' Get all running Excel processes
    For Each proc As Process In Process.GetProcessesByName("EXCEL")
        Dim processUser As String = GetProcessUser(proc)

        ' Close only the Excel processes belonging to the current user
        If processUser.ToLower() = currentUser Then
            CloseExcelWorkbooks(proc)
        End If
    Next
Catch ex As Exception
    ' Ignore if Excel is not running
End Try

' Function to get the username of a process
Function GetProcessUser(proc As Process) As String
    Try
        Dim query As String = "SELECT * FROM Win32_Process WHERE ProcessId = " & proc.Id
        Dim searcher As New Management.ManagementObjectSearcher(query)
        Dim processList As Management.ManagementObjectCollection = searcher.Get()

        For Each obj As Management.ManagementObject In processList
            Dim outParams As Object() = New Object(1) {}
            Dim returnVal As Integer = Convert.ToInt32(obj.InvokeMethod("GetOwner", outParams))

            If returnVal = 0 Then
                Return outParams(0).ToString() ' Return username
            End If
        Next
    Catch ex As Exception
        Return ""
    End Try

    Return ""
End Function

' Function to close only .xls and .xlsx files
Sub CloseExcelWorkbooks(proc As Process)
    Try
        ' Get the running Excel instance
        Dim excelApp As Object = Marshal.GetActiveObject("Excel.Application")
        
        ' Loop through open workbooks
        For Each wb In excelApp.Workbooks
            Dim fileName As String = wb.FullName.ToLower()

            ' Check if the file is .xls or .xlsx and close it
            If fileName.EndsWith(".xls") Or fileName.EndsWith(".xlsx") Then
                wb.Close(False) ' Close without saving
            End If
        Next
    Catch
        ' Ignore any errors
    End Try
End Sub
